if not isfile("Server.txt") then
    writefile("Server.txt","")
end
if not isfile("Game.txt") then
    writefile("Game.txt","")
end

function LoadFile()
    if readfile("Server.txt") ~= "" then
        local json1 = readfile("Server.txt")
        data1 = game:GetService("HttpService"):JSONDecode(json1)
    end
    if readfile("Game.txt") ~= "" then
        local json = readfile("Game.txt")
        data = game:GetService("HttpService"):JSONDecode(json)
    end
end

LoadFile()
if data1 ~= nil then
    if game.JobId == data1.JobId then
        game.Players.LocalPlayer:kick("Kicked. Premium User Activity: You Are Banned from this Server")
    end
end
if data ~= nil then
    if game.PlaceId == data.PlaceId then
        game.Players.LocalPlayer:kick("Kicked. Premium User Activity: You Are Banned from this Game")
    end
end


local queue_on_teleport = queue_on_teleport or syn and syn.queue_on_teleport ('repeat wait() until game:IsLoaded() repeat wait() until game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") wait(2)  loadstring(game:HttpGet("https://raw.githubusercontent.com/notavailable10/notavailable10/main/Loader"))()')

loadstring(game:HttpGet("https://raw.githubusercontent.com/joemuma/script/main/Notification"))()

noti("Base Raiders")
local CoreGui = game:GetService("StarterGui")

local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
local colors = {
    SchemeColor = Color3.fromRGB(225,60,60),
    Background = Color3.fromRGB(20,20,20),
    Header = Color3.fromRGB(10,10,10),
    TextColor = Color3.fromRGB(225,225,225),
    ElementColor = Color3.fromRGB(40,40,40)
}

local Window = Library.CreateLib("RAZE Series X", colors)






--[[
-------------------Welcome----------------
--]]







local Welcome = Window:NewTab("Welcome")
local Welcome = Welcome:NewSection("Welcome")
Welcome:NewLabel("Welcome "..game.Players.LocalPlayer.Name)
Welcome:NewLabel("Thanks for using RAZE Series X")








--[[
-------------------Combat----------------
--]]







local Combat = Window:NewTab("Combat")
local Combat = Combat:NewSection("Combat")
Combat:NewTextBox("Raid Base", "teleports u to the base of the player and raids them", function(txt1)
 
    function getFullNameFromPartial(PartialName)
        local CurrentPlayer=nil;
        local Players= game.Players:GetPlayers();
        for i=1,#Players do
            local foundPlayer=Players[i];
            if string.lower(foundPlayer.DisplayName):sub(1,#PartialName)==string.lower(PartialName)then
                CurrentPlayer=foundPlayer;
                break;
            elseif string.lower(foundPlayer.Name):sub(1,#PartialName)==string.lower(PartialName)then
                CurrentPlayer=foundPlayer;
                break;
            end;
        end;
        return CurrentPlayer;
    end

local CurrentPlayer = getFullNameFromPartial(txt)

for i,v in pairs(game:GetService("Workspace").Tycoons:GetChildren()) do
if v.Owner.Value == CurrentPlayer.Name then
    game.Players.LocalPlayer.Character.Humanoid.Health = 0
    wait(game.Players.RespawnTime)
    repeat wait() until game.Players.LocalPlayer.Character
game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = v:FindFirstChild("Raiding Statue").Model.COLLIDER.CFrame


end
end
end)
Combat:NewTextBox("loop Raid Base", "loop teleports u to the base of the player and raids them", function(txt2)
loop = false
loop = true
while loop == true do
    function getFullNameFromPartial(PartialName)
        local CurrentPlayer=nil;
        local Players= game.Players:GetPlayers();
        for i=1,#Players do
            local foundPlayer=Players[i];
            if string.lower(foundPlayer.DisplayName):sub(1,#PartialName)==string.lower(PartialName)then
                CurrentPlayer=foundPlayer;
                break;
            elseif string.lower(foundPlayer.Name):sub(1,#PartialName)==string.lower(PartialName)then
                CurrentPlayer=foundPlayer;
                break;
            end;
        end;
        return CurrentPlayer;
    end

local CurrentPlayer = getFullNameFromPartial(txt2)

for i,v in pairs(game:GetService("Workspace").Tycoons:GetChildren()) do
if v.Owner.Value == CurrentPlayer.Name then
    game.Players.LocalPlayer.Character.Humanoid.Health = 0
    wait(game.Players.RespawnTime)
    repeat wait() until game.Players.LocalPlayer.Character
game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = v:FindFirstChild("Raiding Statue").Model.COLLIDER.CFrame


end
end
wait(70)
end
end)
Combat:NewButton("Mod guns", "Makes ur guns better", function()
local FEmusic = true;
local musicid = " "; --edit the id
local shotsound = true
local shotsoundid = " "--edit the id
 
 
for i,v in pairs(game.ReplicatedStorage.WeaponScripts.WeaponConfigs:GetChildren()) do
local gun = require(v)
    if v ~= game.ReplicatedStorage.WeaponScripts.WeaponConfigs:FindFirstChild("Rocket Launcher") then
        gun.magSize = 10000000
gun.damage = 999
gun.pellets = 30
gun.reloadTime = 0
gun.bulletSpeed = 100009999990
gun.range = 200099
gun.minSpread = 0
gun.maxSprea = 0
gun.RPM = 1000000000
gun.fireMode = 1
gun.customDamage.Head = 10000
gun.spreadCooldown = 0
gun.spreadAdd = 0
end
if shotsound == true then
   gun.shootSound = {shotsoundid,1000000000, 1, true }
end
if FEmusic == true then
       gun.equipSound = { musicid, 1000000000, 1, true }
end
end
end)














--[[
-------------------LocalPlayer----------------
--]]







local LocalPlayer = Window:NewTab("Local Player")
local LocalPlayer = LocalPlayer:NewSection("Local Player")
LocalPlayer:NewTextBox("View Player","Views The Player Of The Name u Write",function(txt)
    pcall(function()
    function getFullNameFromPartial(PartialName)
        local CurrentPlayer=nil;
        local Players= game.Players:GetPlayers();
        for i=1,#Players do
            local foundPlayer=Players[i];
            if string.lower(foundPlayer.DisplayName):sub(1,#PartialName)==string.lower(PartialName)then
                CurrentPlayer=foundPlayer;
                break;
            elseif string.lower(foundPlayer.Name):sub(1,#PartialName)==string.lower(PartialName)then
                CurrentPlayer=foundPlayer;
                break;
            end;
        end;
        return CurrentPlayer;
    end
    
    local CurrentPlayer = getFullNameFromPartial(txt)
    
    game:GetService("Workspace").Camera.CameraSubject = CurrentPlayer.Character.Humanoid
    end)
end)
LocalPlayer:NewTextBox("Teleport to Player", "Type name of Player to teleport", function(txt)
    function getFullNameFromPartial(PartialName)
        local CurrentPlayer=nil;
        local Players= game.Players:GetPlayers();
        for i=1,#Players do
            local foundPlayer=Players[i];
            if string.lower(foundPlayer.DisplayName):sub(1,#PartialName)==string.lower(PartialName)then
                CurrentPlayer=foundPlayer;
                break;
            elseif string.lower(foundPlayer.Name):sub(1,#PartialName)==string.lower(PartialName)then
                CurrentPlayer=foundPlayer;
                break;
            end;
        end;
        return CurrentPlayer;
    end

local CurrentPlayer = getFullNameFromPartial(txt)


game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CurrentPlayer.Character.HumanoidRootPart.CFrame
end)
LocalPlayer:NewButton("Fix View", "Views Urself", function()
    game:GetService("Workspace").Camera.CameraSubject = game.Players.LocalPlayer.Character.Humanoid
end)
local noclip = true
LocalPlayer:NewKeybind("Noclip", "Noclip", Enum.KeyCode.G, function()
local character = game.Players.LocalPlayer.Character or game.Players.LocalPlayer.CharacterAdded:Wait()
noclip = not noclip
while true do
    character = game.Players.LocalPlayer.Character

    if noclip then
        for _, v in pairs(character:GetDescendants()) do
            pcall(function()
                if v:IsA("BasePart") then
                    v.CanCollide = false
                end
            end)
        end
    end

    game:GetService("RunService").Stepped:wait()
end
end)
LocalPlayer:NewSlider("JumpHeight", "Changes ur Jump Power", 350, 50, function(b) -- 500 = max 0 = min

    game.Players.LocalPlayer.Character.Humanoid.JumpPower = b

end)
LocalPlayer:NewButton("Anti afk", "U wont get kicked from afking more than 20 minutes", function() 
antiafk = true
while antiafk== true do
	local vu = game:GetService("VirtualUser")
	game:GetService("Players").LocalPlayer.Idled:connect(function()
		vu:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
		wait(1)
		vu:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
	end)
	wait(20)
	end

end)





--[[
-------------------Misc----------------
--]]







local Misc = Window:NewTab("Misc")
local Misc = Misc:NewSection("Misc")
Misc:NewButton("Rejoin", "Teleports u into the same server again", function()
game:GetService("TeleportService"):Teleport(game.PlaceId, game.JobId, game:GetService("Players").LocalPlayer)
end)
Misc:NewButton("Server Hop", "Teleports u into the Another Server of the game", function()
local PlaceID = game.PlaceId
local AllIDs = {}
local foundAnything = ""
local actualHour = os.date("!*t").hour
local Deleted = false
local File = pcall(function()
    AllIDs = game:GetService('HttpService'):JSONDecode(readfile("NotSameServers.json"))
end)
if not File then
    table.insert(AllIDs, actualHour)
    writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
end
function TPReturner()
    local Site;
    if foundAnything == "" then
        Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100'))
    else
        Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100&cursor=' .. foundAnything))
    end
    local ID = ""
    if Site.nextPageCursor and Site.nextPageCursor ~= "null" and Site.nextPageCursor ~= nil then
        foundAnything = Site.nextPageCursor
    end
    local num = 0;
    for i,v in pairs(Site.data) do
        local Possible = true
        ID = tostring(v.id)
        if tonumber(v.maxPlayers) > tonumber(v.playing) then
            for _,Existing in pairs(AllIDs) do
                if num ~= 0 then
                    if ID == tostring(Existing) then
                        Possible = false
                    end
                else
                    if tonumber(actualHour) ~= tonumber(Existing) then
                        local delFile = pcall(function()
                            delfile("NotSameServers.json")
                            AllIDs = {}
                            table.insert(AllIDs, actualHour)
                        end)
                    end
                end
                num = num + 1
            end
            if Possible == true then
                table.insert(AllIDs, ID)
                wait()
                pcall(function()
                    writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
                    wait()
                    game:GetService("TeleportService"):TeleportToPlaceInstance(PlaceID, ID, game.Players.LocalPlayer)
                end)
                wait(4)
            end
        end
    end
end

function Teleport()
    while wait() do
        pcall(function()
            TPReturner()
            if foundAnything ~= "" then
                TPReturner()
            end
        end)
    end
end


Teleport()
end)
Misc:NewButton("Paint all","Paints all building in ur base", function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/joemuma/script/main/skidd"))()
end)
Misc:NewButton("Picks up everything in ur base","Auto picks up everything like vaults", function()
FireClickDetectors = true
while FireClickDetectors == true do
for i,v in pairs(game.Workspace:GetDescendants()) do
if v:IsA("Part") then
    if not v.Parent.Parent:FindFirstChild("NEWITEM") then
    if v:FindFirstChild("ClickDetector") then
    fireclickdetector(v.ClickDetector)
end
end
end
end
wait(10)
end
end)
Misc:NewButton("Repairs everything quick ","Repairs all buildings in ur base", function()
repair = true
while repair == true do
for i,v in pairs(workspace.Tycoons:GetChildren()) do
if v.Owner.Value == game.Players.LocalPlayer.Name then
for i,b in pairs(v.PlacedContent:GetChildren()) do
    if b:FindFirstChild("Broken") then
local args = {
    [1] = b
}

game:GetService("ReplicatedStorage").Events.RepairItem:InvokeServer(unpack(args))
end
end
end
end
wait(.1)
end
end)
Misc:NewButton("Auto Crates","automaticly gives u the crates that spawn", function()
crates = true
while crates == true do
if game.Workspace:FindFirstChild("Base Crate") then
    if game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace")["Base Crate"].Part.CFrame
end
else
print("no common")
end
if game.Workspace:FindFirstChild("Blazing Crate") then
    if game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace")["Blazing Crate"].Part.CFrame
end
else
print("no uncommon")
end
if game.Workspace:FindFirstChild("Dark Matter Crate") then
    if game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace")["Dark Matter Crate"].Part.CFrame
end
else
print("no rare")
end
if game.Workspace:FindFirstChild("Rainbow Crate") then
    if game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace")["Rainbow Crate"].Part.CFrame
end
else
print("no epic")
end
if game.Workspace:FindFirstChild("Legendary Crate") then
    if game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace")["Legendary Crate"].Part.CFrame
end
else
print("no legendary")
end
if game.Workspace:FindFirstChild("Godly Crate") then
    if game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace")["Godly Crate"].Part.CFrame
end
else
print("no godly")
end
wait(2)
end


end)
Misc:NewButton("Unlock paint colors","Makes u able to use gamepass colors", function()
for i,v in pairs(game:GetService("ReplicatedStorage").Colors:GetChildren()) do
if v:FindFirstChild("NeedsPass") then
v.NeedsPass:Destroy()
end
end
for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.MainGUI.ColorPicker.Colors:GetChildren()) do
if v:FindFirstChild("LOCK") then
v.LOCK.Visible = false
end
end
end)
Misc:NewButton("auto rewards","Automaticly claims rewards", function()
rewards = true
while rewards == true do

local args = {
    [1] = "Reward1"
}

game:GetService("ReplicatedStorage").Events.SessionRewards:FireServer(unpack(args))

local args = {
    [1] = "Reward2"
}

game:GetService("ReplicatedStorage").Events.SessionRewards:FireServer(unpack(args))

local args = {
    [1] = "Reward3"
}

game:GetService("ReplicatedStorage").Events.SessionRewards:FireServer(unpack(args))

local args = {
    [1] = "Reward4"
}

game:GetService("ReplicatedStorage").Events.SessionRewards:FireServer(unpack(args))

local args = {
    [1] = "Reward5"
}

game:GetService("ReplicatedStorage").Events.SessionRewards:FireServer(unpack(args))
wait(10)
end
end)


--[[
-------------------Settings----------------
--]]







local Settings = Window:NewTab("Settings")
local Settings = Settings:NewSection("Settings")
Settings:NewKeybind("Toggle Gui", "Press This Key To Toggle The Gui", Enum.KeyCode.F, function()
	Library:ToggleUI()
end)






--[[
-------------------Credits----------------
--]]







local Credits = Window:NewTab("Credits")
local Credits = Credits:NewSection("Credits")
Credits:NewLabel("Made by RQZEX#9971")
Credits:NewLabel("Credits: SkiddDev#2675")
Credits:NewButton("Join Discord", "Copy's The Link of the Discord", function()
getgenv().Discord = "suEFpCAFaD"
syn.request(
   {
       Url = "http://127.0.0.1:6463/rpc?v=1",
       Method = "POST",
       Headers = {
           ["Content-Type"] = "application/json",
           ["origin"] = "https://discord.com",
       },
       Body = game:GetService("HttpService"):JSONEncode(
           {
               ["args"] = {
                   ["code"] = getgenv().Discord,
               },
               ["cmd"] = "INVITE_BROWSER",
               ["nonce"] = "."
           })
   })
end)

loadstring(game:HttpGet("https://raw.githubusercontent.com/joemuma/script/main/Premium"))()
